#!/usr/bin/env bash
# provides a line count with some pretty bars if the -b option is supplied
# verbose mode with -v
# 'show search' mode with -s
# optargs planned - todo

usebars=1
verbose=0
verbshort=0
showsearch=0

# Spacing UI Vars
spacegap=7
pctgap=20
verbgap=7

declare -a filetypes=( .py .m .vim .sh .c .cpp .ino .hs .lhs .tex .md .html .css .php .js )
declare -a counts=()

for filetype in "${filetypes[@]}"
do
    if [ $showsearch -eq 1 ]; then
        echo -e "Locating $filetype"
    fi

    # clean file list
    files=$(find . 2>&1 | grep "\\$filetype$" | grep -v "denied" | grep -v "No such" | grep -v "undodir")
    
    sum=0
    if [ ${#files} -ge 1 ];
    then
        while read -r line; do
    
            if [ -f "$line" ]; then # FILES ONLY - we dont' want directories like .vim

                # line sum
                out=`wc -l "$line"`
                out=`echo $out | cut -f1 -d ' ' `
                if  [[ $out > 0 ]]; then
                    sum=$(($sum+$out))
                fi

                ### BEGIN VERBOSE MODE CODE
                if [ $verbose -eq 1 ]; then
                    nspaces=$(( $verbgap - ${#out} ))
                    if [ $nspaces -le 0 ]; then nspaces=1; fi 
                    outstr="$out"
                    outstr+=$(for ((i=1; i<=$nspaces; i++)); do echo -n ' '; done)
                    if [ $verbshort -eq 1 ]; then
                        outstr+=": $(basename "$line")"
                    else
                        outstr+=": $line"
                    fi 
                    echo "$outstr"
                fi
                ### END VERBOSE MODE CODE
            fi

        done <<< "$files"
    fi
    counts+=( $sum )
done

# add a nice little gap when in verbose mode
if [ $verbose -eq 1 ]; then
    echo -e "\n\n"
fi

# get some important variables
xwidth=$(tput cols)
maxcount=${counts[0]}
cumsum=${counts[0]}
for n in "${counts[@]}" ; do
    ((n > maxcount)) && maxcount=$n
    cumsum=$(($n + $cumsum))
done


for i in ${!filetypes[*]};
do
    if [[ ${counts[$i]} -ne 0 ]]; then
        nspaces=$((  $spacegap  -  $(echo -n ${filetypes[$i]} | wc -c)   ))
        if [ $nspaces -le 0 ]; then nspaces=1; fi 
        outstr="${filetypes[$i]}"
        outstr+=$(for ((i=1; i<=$nspaces; i++)); do echo -n ' '; done)
        outstr+=": ${counts[$i]}"
        pct=$( bc <<< "scale=2; 100 * ${counts[$i]} / $cumsum ")
        nspaces=$((  $pctgap  -  ${#outstr}  ))
        if [ $nspaces -le 0 ]; then nspaces=1; fi 
        outstr+=$(for ((i=1; i<=$nspaces; i++)); do echo -n ' '; done)
        outstr+="($pct%)"
        echo "$outstr"

        ### BEGIN BAR UI CODE
        if [ $usebars -eq 1 ];
        then
            numbar=$(echo $(($xwidth * ${counts[$i]} / $maxcount)) | awk '{print int($1+0.5)}')
            bar=$(for ((i=1; i<=$numbar; i++)); do echo -n 'â–ˆ'; done)
            echo "$bar"
        fi
        ### END BAR UI CODE
    fi
done
echo -e ""
echo "$cumsum Total Lines"


# Copyright (C) William Matthews 2019
